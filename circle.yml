machine:
  environment:
    GCLOUD_PROJECT_NAME: tabb-168314
    GCLOUD_CLUSTER_NAME: dev
    CLOUDSDK_COMPUTE_ZONE: europe-west1-b
    DOCKER_TAG_PREFIX: "eu.gcr.io/$GCLOUD_PROJECT_NAME/my-service"
    DOCKER_TAG: "$DOCKER_TAG_PREFIX:$CIRCLE_SHA1"
    GOOGLE_APPLICATION_CREDENTIALS: ${HOME}/gcloud-service-key.json
  services:
    - docker
dependencies:
  pre:
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 149.0.0
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update --version 149.0.0 kubectl
    - echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $GCLOUD_PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $GCLOUD_CLUSTER_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $GCLOUD_CLUSTER_NAME
    - sudo chown -R ubuntu:ubuntu /home/ubuntu/.kube
deployment:
  production:
    branch: ['master']
    commands:
      - docker build -t "$DOCKER_TAG" .
      - docker tag "$DOCKER_TAG" "$DOCKER_TAG_PREFIX:latest"
      - sudo /opt/google-cloud-sdk/bin/gcloud docker -- push $DOCKER_TAG
      - sudo /opt/google-cloud-sdk/bin/gcloud docker -- push "$DOCKER_TAG_PREFIX:latest"
      - kubectl --namespace=production patch deployment my-service -p '{"spec":{"template":{"spec":{"containers":[{"name":"my-service","image":"'"$DOCKER_TAG"'"}]}}}}'
  staging:
    branch: ['develop']
    commands:
      - docker build -t "$DOCKER_TAG" .
      - docker tag "$DOCKER_TAG" "$DOCKER_TAG_PREFIX:develop"
      - sudo /opt/google-cloud-sdk/bin/gcloud docker -- push $DOCKER_TAG
      - sudo /opt/google-cloud-sdk/bin/gcloud docker -- push "$DOCKER_TAG_PREFIX:develop"
      - kubectl --namespace=staging patch deployment my-service -p '{"spec":{"template":{"spec":{"containers":[{"name":"my-service","image":"'"$DOCKER_TAG"'"}]}}}}'
